import numpy as np
import matplotlib as mpl
mpl.use('agg')
import matplotlib.pyplot as plt
import matplotlib.colors as colors
import matplotlib.cm as cm
from matplotlib import ticker
from mpl_toolkits.axes_grid1 import make_axes_locatable
from scipy.interpolate import griddata
from scipy.interpolate import UnivariateSpline
from scipy.optimize import curve_fit
from matplotlib import rcParams
import os
import sys

def colorbar(mappable):
    last_axes = plt.gca()
    ax_m = mappable.axes
    fig1 = ax_m.figure
    divider = make_axes_locatable(ax_m)
    cax = divider.append_axes("right", size="5%", pad=0.05)
    cbar = fig1.colorbar(mappable, cax=cax,orientation='vertical')
    cbar.ax.yaxis.set_ticks_position('right')
    plt.sca(last_axes)
    return cbar

home = os.getcwd() + "/"
fname = "Moon_lifetimes_" 

vmin = 10
vmax = 1e5
cmap = cm.gist_rainbow_r
my_cmap = cm.get_cmap(cmap)
norm = colors.Normalize(vmin,vmax)
cmmapable = cm.ScalarMappable(norm,my_cmap)
cmmapable.set_array(range(0,1))
my_cmap.set_under('w')
my_cmap.set_over('gray')

#3sigma limits from Kipping (2020) using TTVs
KOI268_Mf = [1,0.6,0.4,0.3,0.2,0.1,0.06,0.03,0.01]
KOI268_ap = [3,4,5,6,9,16,30,50,120]

KOI303_ap = [4.2,6,9,22,50,100,250]
KOI303_Mf = [1,0.6,0.3,0.1,0.045,0.022,0.0075]

KOI1888_ap = [5,6,7,10,23,70,200]
KOI1888_Mf = [1,0.65,0.5,0.3,0.1,0.03,0.0082]

KOI1925_ap = [10,20,50,100,200,250]
KOI1925_Mf = [1,0.3,0.1,0.05,0.022,0.018]

KOI2728_ap = [6,8,10,20,50,100,250]
KOI2728_Mf = [1,0.6,0.45,0.2,0.065,0.03,0.01]

KOI3220_ap = [2,5,10,20,50,100,200]
KOI3220_Mf = [0.28,0.1,0.04,0.02,0.008,0.003,0.002]

KOI_ap = [KOI268_ap,KOI303_ap,KOI1888_ap,KOI1925_ap,KOI2728_ap,KOI3220_ap]
KOI_Mf = [KOI268_Mf,KOI303_Mf,KOI1888_Mf,KOI1925_Mf,KOI2728_Mf,KOI3220_Mf]

rcParams.update({'font.size': 22})

KOI_num = [268,303,1888,1925,2728,3220]

aspect = 2.
width = 12.
lw = 5
ms = 20
fs = 'x-large'

fig = plt.figure(1,figsize=(aspect*width,2*width),dpi=300)
ax11 = fig.add_subplot(321)
ax12 = fig.add_subplot(322)
ax21 = fig.add_subplot(323)
ax22 = fig.add_subplot(324)
ax31 = fig.add_subplot(325)
ax32 = fig.add_subplot(326)

ax_list = [ax11,ax12,ax21,ax22,ax31,ax32]


yi = np.concatenate((np.arange(0.001,0.01,0.001),np.arange(0.01,0.1,0.005),np.arange(0.1,1.05,0.05)))  #M_sat/M_p
xi = np.concatenate((np.arange(2,10,0.5),np.arange(10,100,1),np.arange(100,300,50))) #a_sat (in R_p)
Q_rng = [10,100,1000,10000,100000]

for i in range(0,6):
    ax = ax_list[i]
    #read data file generated by Calc_tidal_limit.py
    dat_file = np.genfromtxt(home+fname+"KOI%i.txt" % KOI_num[i],delimiter=',',comments='#')
    dat_file[:,2] = np.ma.masked_where(dat_file[:,2] <= 0, dat_file[:,2])
        
    zi = griddata((dat_file[:,0],dat_file[:,1]),(dat_file[:,2]),(xi[None,:],yi[:,None]),method = 'linear')
    CS = ax.pcolor(xi,yi,zi,cmap = cmap,vmin=vmin,vmax=vmax,norm=colors.LogNorm(vmin=vmin, vmax=vmax))
    
    ax_list[i].text(0.99,0.9,'KOI %i.01' % KOI_num[i], color='k',fontsize='x-large',weight='bold',horizontalalignment='right',transform=ax.transAxes)
    ax.minorticks_on()
    ax.tick_params(which='major',axis='both', direction='out',length = 12.0, width = 8.0,labelsize=fs)
    ax.tick_params(which='minor',axis='both', direction='out',length = 8.0, width = 6.0)
    if i > 3:
        ax.set_xlabel("$a_{\\rm sat}$  (R$_p$)",fontsize=fs)
    if i % 2 == 0:
        ax.set_ylabel("M$_{\\rm sat}$/M$_{\\rm p}$",fontsize=fs)
    else:
        cbar = colorbar(CS)
        cbar.set_label("$Q_{crit}$",fontsize=fs)
        cbar.ax.tick_params(which='major',axis='both', direction='out',length = 12.0, width = 8.0,labelsize=fs)
        cbar.ax.tick_params(which='minor',axis='both', direction='out',length = 8.0, width = 6.0)

    ax.set_yscale('log')
    ax.set_xscale('log')

    ax.set_ylim(0.001,0.1)
    ax.set_xlim(2.,250)
        

fig.savefig("FW_KOIs_tides_%s.png" % model,bbox_inches='tight',dpi=300)
plt.close()
